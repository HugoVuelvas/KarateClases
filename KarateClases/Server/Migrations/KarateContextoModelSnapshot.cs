// <auto-generated />
using System;
using KarateClases.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KarateClases.Server.Migrations
{
    [DbContext(typeof(KarateContexto))]
    partial class KarateContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KarateClases.Shared.Modelos.Alumno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DojoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Edad")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Genero")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Grado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TutorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DojoId");

                    b.HasIndex("TutorId");

                    b.ToTable("Alumnos");
                });

            modelBuilder.Entity("KarateClases.Shared.Modelos.Dojo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Horario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dojos");
                });

            modelBuilder.Entity("KarateClases.Shared.Modelos.Tutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Ocupacion")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TutorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TutorId");

                    b.ToTable("Tutores");
                });

            modelBuilder.Entity("KarateClases.Shared.Modelos.Alumno", b =>
                {
                    b.HasOne("KarateClases.Shared.Modelos.Dojo", "Dojo")
                        .WithMany("Alumnos")
                        .HasForeignKey("DojoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KarateClases.Shared.Modelos.Tutor", "Tutor")
                        .WithMany()
                        .HasForeignKey("TutorId");

                    b.Navigation("Dojo");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("KarateClases.Shared.Modelos.Tutor", b =>
                {
                    b.HasOne("KarateClases.Shared.Modelos.Tutor", null)
                        .WithMany("Tutores")
                        .HasForeignKey("TutorId");
                });

            modelBuilder.Entity("KarateClases.Shared.Modelos.Dojo", b =>
                {
                    b.Navigation("Alumnos");
                });

            modelBuilder.Entity("KarateClases.Shared.Modelos.Tutor", b =>
                {
                    b.Navigation("Tutores");
                });
#pragma warning restore 612, 618
        }
    }
}
